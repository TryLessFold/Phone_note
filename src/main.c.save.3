#include <stdio.h>
#include <malloc.h>
#include <string.h>

struct tel_note
{
	char name[20];
	char lastname[20];
	char tel[20];
};
struct tel_srch
{
	struct tel_note *ptr;
	int size;
};
void display()
{
	printf("\n------------------\n");
	printf("1. Add\n");
	printf("2. Search\n");
	printf("3. Delete\n");
	printf("4. List\n");
	printf("0. Exit\n\n");
	printf("Input: ");
}

void Add (struct tel_note *note ,char *a, char *b, char *c)
{
	for(int i = 0; i<20; i++)
	{
		note->name[i] = a[i];
		note->lastname[i] = b[i];
		note->tel[i] = c[i];
	}
}
void Search(struct tel_note *note, char* key, int size, struct tel_note **ptr, int *size_p)
{
	int i = 0;
	while(i<size)
	{
		if ((!strcmp(note[i].name,key))||(!strcmp(note[i].lastname,key))||(!strcmp(note[i].tel,key)))
		{
			(*size_p)++;
			*ptr = realloc(*ptr, *size_p);
			for(int j = 0; j<20; j++)
			{
				ptr[*size_p-1]).name[j] = note[i].name[j];
				ptr[*size_p-1]).lastname[j] = note[i].lastname[j];
				ptr[*size_p-1]).tel[j] = note[i].tel[j];
			}
		}
		i++;
	}
}
//void Remove(struct tel_note *)
void Outdirect (struct tel_note* note, int size)
{
	printf("  %10s %21s%21s%21s\n","â„–","Name","Last Name","Telephone number");
	for(int i=0;i<size; i++)
	{
		if(note[i].tel[0]!=0)
		{
			printf("%10d.%21s%21s%21s\n",i+1, note[i].name, note[i].lastname, note[i].tel);
		}
	}
}

void fgets_end(char *a, int length, FILE *f)
{
	fgets(a, length, f);
	int i = 0;
	while((a[i]!='\n')&&(i<length)){
		i++;
	}
	a[i] = '\0';
}

void clear_stdin()
{
	int c;
	while ((c = getchar()) != '\n' && c != EOF){
		continue;
	}
}

int main()
{
	char *ptr;
	char ch[3];
	struct tel_note *note = NULL, *key = NULL;
	int size_direct = 0, size_search = 0;
        char tmp_1[20], tmp_2[20], tmp_3[20];
	while(ch[0]!='0')
	{
		display();
		scanf("%s", ch);
		switch(ch[0])
		{
			case '0':
				return 0;
			case '1':
				size_direct++;
				note = realloc(note, size_direct*sizeof(struct tel_note));
				clear_stdin();
				printf("Input name: ");
				fgets_end(tmp_1,19,stdin);
				printf("Input lastname: ");
				fgets_end(tmp_2,19,stdin);
				printf("input telephone: ");
				fgets_end(tmp_3,19,stdin);
				Add(&note[size_direct-1], tmp_1, tmp_2, tmp_3);
				break;
			case '2':
				Search(note, "lala", size_direct, &key, &size_search);
				Outdirect(key, size_search);
				break;
			case '4':
				Outdirect(note, size_direct);
				//printf("\n");
				break;
		}
	}
	return 0;
}
